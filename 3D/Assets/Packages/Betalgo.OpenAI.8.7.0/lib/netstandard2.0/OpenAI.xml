<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenAI</name>
    </assembly>
    <members>
        <member name="T:OpenAI.Builders.FunctionDefinitionBuilder">
            <summary>
                FunctionDefinitionBuilder is used to build and validate a FunctionDefinition object.
            </summary>
        </member>
        <member name="F:OpenAI.Builders.FunctionDefinitionBuilder.ValidNameChars">
            <summary>
                String constant for validation of function name.
            </summary>
        </member>
        <member name="M:OpenAI.Builders.FunctionDefinitionBuilder.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of FunctionDefinitionBuilder.
            </summary>
            <param name="name">The name of the function</param>
            <param name="description">The optional description of the function</param>
        </member>
        <member name="M:OpenAI.Builders.FunctionDefinitionBuilder.Validate">
            <summary>
                Validates the function definition.
            </summary>
            <returns>The FunctionDefinitionBuilder instance for fluent configuration</returns>
        </member>
        <member name="M:OpenAI.Builders.FunctionDefinitionBuilder.Build">
            <summary>
                Builds the FunctionDefinition object.
            </summary>
            <returns>The built FunctionDefinition object</returns>
        </member>
        <member name="M:OpenAI.Builders.FunctionDefinitionBuilder.ValidateName(System.String)">
            <summary>
                Validates the name of the function.
            </summary>
            <param name="functionName">The name of the function to validate</param>
        </member>
        <member name="M:OpenAI.Extensions.StreamHandleExtension.ReassemblyContext.Process(OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse)">
            <summary>
                Detects if a response block is a part of a multi-chunk
                streamed tool call response of type == "function". As long as that's true,
                it keeps accumulating block contents even handling multiple parallel tool calls, and once all the function call
                streaming is done, it produces the assembled results in the final block.
            </summary>
            <param name="block"></param>
        </member>
        <member name="T:OpenAI.Extensions.StringExtensions">
            <summary>
                Extension methods for string manipulation
            </summary>
        </member>
        <member name="M:OpenAI.Extensions.StringExtensions.RemoveIfStartWith(System.String,System.String)">
            <summary>
                Remove the search string from the beginning of string if it exists
            </summary>
            <param name="text"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAssistantService.AssistantCreate(OpenAI.ObjectModels.RequestModels.AssistantCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Create an assistant with a model and instructions.
            </summary>
            <param name="request"></param>
            <param name="modelId">
                ID of the model to use. You can use the List models API to see all of your available models, or
                see our Model overview for descriptions of them.
            </param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAssistantService.AssistantList(OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of assistants.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAssistantService.AssistantRetrieve(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves an assistant.
            </summary>
            <param name="assistantId">The ID of the assistant to retrieve.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAssistantService.AssistantModify(System.String,OpenAI.ObjectModels.RequestModels.AssistantModifyRequest,System.Threading.CancellationToken)">
            <summary>
                Modifies an assistant.
            </summary>
            <param name="assistantId">The ID of the assistant to modify.</param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAssistantService.AssistantDelete(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete an assistant.
            </summary>
            <param name="assistantId">The ID of the assistant to delete.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IAudioService">
            <summary>
                Learn how to turn audio into text.
                Related guide: <a href="https://platform.openai.com/docs/guides/speech-to-text">Speech to text</a>
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IAudioService.CreateTranscription(OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest,System.Threading.CancellationToken)">
            <summary>
                Transcribes audio into the input language.
            </summary>
            <param name="audioCreateTranscriptionRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAudioService.CreateTranslation(OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest,System.Threading.CancellationToken)">
            <summary>
                Translates audio into into English.
            </summary>
            <param name="audioCreateTranscriptionRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IAudioService.CreateSpeech``1(OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest,System.Threading.CancellationToken)">
            <summary>
                Generates audio from the input text.
            </summary>
            <param name="audioCreateSpeechRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IBatchService.BatchCreate(OpenAI.ObjectModels.RequestModels.BatchCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates and executes a batch from an uploaded file of requests.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns>The created Batch object.</returns>
        </member>
        <member name="M:OpenAI.Interfaces.IBatchService.BatchRetrieve(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a batch.
            </summary>
            <param name="batchId">The ID of the batch to retrieve.</param>
            <param name="cancellationToken"></param>
            <returns>The Batch object matching the specified ID.</returns>
        </member>
        <member name="M:OpenAI.Interfaces.IBatchService.BatchCancel(System.String,System.Threading.CancellationToken)">
            <summary>
                Cancels an in-progress batch.
            </summary>
            <param name="batchId">The ID of the batch to cancel.</param>
            <param name="cancellationToken"></param>
            <returns>The Batch object matching the specified ID.</returns>
        </member>
        <member name="T:OpenAI.Interfaces.IChatCompletionService">
            <summary>
                Given a chat conversation, the model will return a chat completion response.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IChatCompletionService.CreateCompletion(OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Creates a completion for the chat message
            </summary>
            <param name="modelId">ID of the model to use. Currently, only gpt-3.5-turbo and gpt-3.5-turbo-0301 are supported.</param>
            <param name="chatCompletionCreate"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IChatCompletionService.CreateCompletionAsStream(OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Creates a new completion for the provided prompt and parameters and returns a stream of CompletionCreateRequests
            </summary>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="chatCompletionCreate"></param>
            <param name="justDataMode">
                Ignore stream lines if they don’t start with "data:". If you don't know what it means,
                probably you shouldn't change this.
            </param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IChatCompletionServiceExtension.Create(OpenAI.Interfaces.IChatCompletionService,OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest,OpenAI.ObjectModels.Models.Model,System.Threading.CancellationToken)">
            <summary>
                Creates a new completion for the provided prompt and parameters
            </summary>
            <param name="service"></param>
            <param name="chatCompletionCreate"></param>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.ICompletionService">
            <summary>
                Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of
                alternative tokens at each position.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.ICompletionService.CreateCompletion(OpenAI.ObjectModels.RequestModels.CompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Creates a new completion for the provided prompt and parameters
            </summary>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="createCompletionModel"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.ICompletionService.CreateCompletionAsStream(OpenAI.ObjectModels.RequestModels.CompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Creates a new completion for the provided prompt and parameters and returns a stream of CompletionCreateRequests
            </summary>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="createCompletionModel"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.ICompletionServiceExtension.Create(OpenAI.Interfaces.ICompletionService,OpenAI.ObjectModels.RequestModels.CompletionCreateRequest,OpenAI.ObjectModels.Models.Model,System.Threading.CancellationToken)">
            <summary>
                Creates a new completion for the provided prompt and parameters
            </summary>
            <param name="service"></param>
            <param name="createCompletionModel"></param>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IEditService">
            <summary>
                Given a prompt and an instruction, the model will return an edited version of the prompt.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IEditService.CreateEdit(OpenAI.ObjectModels.RequestModels.EditCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Creates a new edit for the provided input, instruction, and parameters
            </summary>
            <param name="editCreate"></param>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IEditServiceExtension.Edit(OpenAI.Interfaces.IEditService,OpenAI.ObjectModels.RequestModels.EditCreateRequest,OpenAI.ObjectModels.Models.Model,System.Threading.CancellationToken)">
            <summary>
                Creates a new edit for the provided input, instruction, and parameters
            </summary>
            <param name="service"></param>
            <param name="editCreate"></param>
            <param name="modelId">The ID of the model to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IEmbeddingService">
            <summary>
                Creates an embedding vector representing the input text.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IEmbeddingService.CreateEmbedding(OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a new embedding for the provided input and parameters.
            </summary>
            <param name="createEmbeddingModel"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileService.ListFile(System.Threading.CancellationToken)">
            <summary>
                Returns a list of files that belong to the user's organization.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileService.UploadFile(System.String,System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
                Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all
                the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage
                limit.
            </summary>
            <param name="file">
                Name of the <a href="https://jsonlines.readthedocs.io/en/latest/"> JSON Lines </a> file to be uploaded.
                If the purpose is set to "fine-tune", each line is a JSON record with "prompt" and "completion" fields representing
                your <a href="https://platform.openai.com/docs/guides/fine-tuning/prepare-training-data">training examples</a>.
            </param>
            <param name="fileName">Name of file</param>
            <param name="purpose">
                The intended purpose of the uploaded documents.
                Use "fine-tune" for <a href="https://platform.openai.com/docs/api-reference/fine-tunes">Fine-tuning</a>. This
                allows us
                to validate the format of the uploaded file.
            </param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileService.DeleteFile(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a file.
            </summary>
            <param name="fileId">The ID of the file to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileService.RetrieveFile(System.String,System.Threading.CancellationToken)">
            <summary>
                Returns information about a specific file.
            </summary>
            <param name="fileId">The ID of the file to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileService.RetrieveFileContent``1(System.String,System.Threading.CancellationToken)">
            <summary>
                Returns the contents of the specified file
            </summary>
            <param name="fileId">The ID of the file to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFileServiceExtension.RetrieveFileContent(OpenAI.Interfaces.IFileService,System.String,System.Threading.CancellationToken)">
            <summary>
                Returns the contents of the specified file
            </summary>
            <param name="service"></param>
            <param name="fileId">The ID of the file to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IFineTuneService">
            <summary>
                Manage fine-tuning jobs to tailor a model to your specific training data.
                Related guide: <a href="https://platform.openai.com/docs/guides/fine-tuning">Fine-tune models</a>
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuneService.CreateFineTune(OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a job that fine-tunes a specified model from a given dataset.
                Response includes details of the enqueued job including job status and the name of the fine-tuned models once
                complete.
            </summary>
            <param name="createFineTuneRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuneService.ListFineTunes(System.Threading.CancellationToken)">
            <summary>
                List your organization's fine-tuning jobs
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuneService.RetrieveFineTune(System.String,System.Threading.CancellationToken)">
            <summary>
                Gets info about the fine-tune job.
            </summary>
            <param name="fineTuneId">The ID of the fine-tune job</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuneService.CancelFineTune(System.String,System.Threading.CancellationToken)">
            <summary>
                Immediately cancel a fine-tune job.
            </summary>
            <param name="fineTuneId">The ID of the fine-tune job to cancel</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuneService.ListFineTuneEvents(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Get fine-grained status updates for a fine-tune job.
            </summary>
            <param name="fineTuneId">The ID of the fine-tune job to get events for.</param>
            <param name="stream">
                Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only server-sent events
                as they become available. The stream will terminate with a data: [DONE] message when the job is finished
                (succeeded, cancelled, or failed).
                If set to false, only events generated so far will be returned.
            </param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IFineTuningJobService">
            <summary>
                Manage fine-tuning jobs to tailor a model to your specific training data.
                Related guide: <a href="https://platform.openai.com/docs/guides/fine-tuning">Fine-tune models</a>
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuningJobService.CreateFineTuningJob(OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a job that fine-tunes a specified model from a given dataset.
                Response includes details of the enqueued job including job status and the name of the fine-tuned models once
                complete.
            </summary>
            <param name="createFineTuningJobRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuningJobService.ListFineTuningJobs(OpenAI.ObjectModels.RequestModels.FineTuningJobListRequest,System.Threading.CancellationToken)">
            <summary>
                List your organization's fine-tuning jobs
            </summary>
            <param name="fineTuningJobListRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuningJobService.RetrieveFineTuningJob(System.String,System.Threading.CancellationToken)">
            <summary>
                Gets info about the fine-tuning job.
            </summary>
            <param name="fineTuningJobId">The ID of the fine-tuning job</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuningJobService.CancelFineTuningJob(System.String,System.Threading.CancellationToken)">
            <summary>
                Immediately cancel a fine-tuning job.
            </summary>
            <param name="fineTuningJobId">The ID of the fine-tuning job to cancel</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IFineTuningJobService.ListFineTuningJobEvents(OpenAI.ObjectModels.RequestModels.FineTuningJobListEventsRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Get fine-grained status updates for a fine-tuning job.
            </summary>
            <param name="model"></param>
            <param name="stream">
                Whether to stream events for the fine-tuning job. If set to true, events will be sent as data-only server-sent
                events
                as they become available. The stream will terminate with a data: [DONE] message when the job is finished
                (succeeded, cancelled, or failed).
                If set to false, only events generated so far will be returned.
            </param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IImageService">
            <summary>
                Given a prompt and/or an input image, the model will generate a new image.
                Related guide: <a href="https://platform.openai.com/docs/guides/images">Image generation</a>
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IImageService.CreateImage(OpenAI.ObjectModels.RequestModels.ImageCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates an image given a prompt.
            </summary>
            <param name="imageCreate"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IImageService.CreateImageEdit(OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates an edited or extended image given an original image and a prompt.
            </summary>
            <param name="imageEditCreateRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IImageService.CreateImageVariation(OpenAI.ObjectModels.RequestModels.ImageVariationCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a variation of a given image.
            </summary>
            <param name="imageEditCreateRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IImageServiceExtension.CreateImage(OpenAI.Interfaces.IImageService,System.String,System.Threading.CancellationToken)">
            <summary>
                Creates an image given a prompt.
            </summary>
            <param name="service"></param>
            <param name="prompt"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IMessageService.CreateMessage(System.String,OpenAI.ObjectModels.RequestModels.MessageCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Create a message.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IMessageService.ListMessages(System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of messages for a given thread.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IMessageService.RetrieveMessage(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieve a message.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IMessageService.ModifyMessage(System.String,System.String,OpenAI.ObjectModels.RequestModels.ModifyMessageRequest,System.Threading.CancellationToken)">
            <summary>
                Modifies a message.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IMessageService.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Deletes a message.
            </summary>
            <param name="threadId">The ID of the thread to which this message belongs.</param>
            <param name="messageId">The ID of the message to delete.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IModelService">
            <summary>
                List and describe the various models available in the API. You can refer to the
                <a href="https://platform.openai.com/docs/models">Models</a> documentation to understand what models are available
                and
                the differences between them.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IModelService.ListModel(System.Threading.CancellationToken)">
            <summary>
                Lists the currently available models, and provides basic information about each one such as the owner and
                availability.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IModelService.RetrieveModel(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
            </summary>
            <param name="model">The ID of the model to use for this request</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IModelService.DeleteModel(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
            </summary>
            <param name="modelId">The model to delete</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:OpenAI.Interfaces.IModerationService">
            <summary>
                Given a input text, outputs if the model classifies it as violating OpenAI's content policy.
                Related guide: <a href="https://platform.openai.com/docs/guides/moderation">Moderations</a>
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IModerationService.CreateModeration(OpenAI.ObjectModels.RequestModels.CreateModerationRequest,System.Threading.CancellationToken)">
            <summary>
                Classifies if text violates OpenAI's Content Policy
            </summary>
            <param name="createModerationRequest"></param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IModerationServiceExtension.CreateModeration(OpenAI.Interfaces.IModerationService,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Classifies if text violates OpenAI's Content Policy
            </summary>
            <param name="service"></param>
            <param name="input">The input text to classify</param>
            <param name="model">
                Two content moderations models are available: text-moderation-stable and text-moderation-latest.
                The default is text-moderation-latest which will be automatically upgraded over time. This ensures you are always
                using our most accurate model. If you use text-moderation-stable, we will provide advanced notice before updating
                the model. Accuracy of text-moderation-stable may be slightly lower than for text-moderation-latest.
            </param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <returns></returns>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Models">
            <summary>
                List and describe the various models available in the API. You can refer to the
                <a href="https://platform.openai.com/docs/models">Models</a> documentation to understand what models are available
                and
                the differences between them.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Completions">
            <summary>
                Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of
                alternative tokens at each position.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Embeddings">
            <summary>
                Creates an embedding vector representing the input text.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Files">
            <summary>
                Files are used to upload documents that can be used across features like <see cref="P:OpenAI.Interfaces.IOpenAIService.FineTunes" />
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.FineTuningJob">
            <summary>
                Manage fine-tuning jobs to tailor a model to your specific training data.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Image">
            <summary>
                Given a prompt and/or an input image, the model will generate a new image.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Edit">
            <summary>
                Creates a new edit for the provided input, instruction, and parameters
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.ChatCompletion">
            <summary>
                Given a chat conversation, the model will return a chat completion response.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Audio">
            <summary>
                Given an audio file, the model will return a transcription of the audio.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Batch">
            <summary>
                Create large batches of API requests to run asynchronously.
            </summary>
        </member>
        <member name="P:OpenAI.Interfaces.IOpenAIService.Beta">
            <summary>
                Beta
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IOpenAIService.SetDefaultModelId(System.String)">
            <summary>
                Set default model
            </summary>
            <param name="modelId"></param>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunCreate(System.String,OpenAI.ObjectModels.RequestModels.RunCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Create a run.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="modelId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunCreateAsStream(System.String,OpenAI.ObjectModels.RequestModels.RunCreateRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Create a run and stream the results.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="modelId"></param>
            <param name="justDataMode"></param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:OpenAI.ObjectModels.ResponseModels.BaseResponse"/> also returns <see cref="T:OpenAI.ObjectModels.SharedModels.RunResponse"/>,<see cref="T:OpenAI.ObjectModels.ResponseModels.RunStepResponse"/>, <see cref="T:OpenAI.ObjectModels.SharedModels.MessageResponse"/> </returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunRetrieve(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a run.
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunCancel(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Cancels a run that is in_progress.
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunSubmitToolOutputs(System.String,System.String,OpenAI.ObjectModels.RequestModels.SubmitToolOutputsToRunRequest,System.Threading.CancellationToken)">
            <summary>
                Submit tool outputs to run
                <para>
                    When a run has the status: "requires_action" and required_action.type is submit_tool_outputs,
                    this endpoint can be used to submit the outputs from the tool calls once they're all completed.
                    All outputs must be submitted in a single request.
                </para>
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunSubmitToolOutputsAsStream(System.String,System.String,OpenAI.ObjectModels.RequestModels.SubmitToolOutputsToRunRequest,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Submit tool outputs to run
                <para>
                    When a run has the status: "requires_action" and required_action.type is submit_tool_outputs,
                    this endpoint can be used to submit the outputs from the tool calls once they're all completed.
                    All outputs must be submitted in a single request.
                </para>
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="request"></param>
            <param name="justDataMode"></param>
            <param name="cancellationToken"></param>
            <returns><see cref="T:OpenAI.ObjectModels.ResponseModels.BaseResponse"/> also returns <see cref="T:OpenAI.ObjectModels.SharedModels.RunResponse"/>,<see cref="T:OpenAI.ObjectModels.ResponseModels.RunStepResponse"/>, <see cref="T:OpenAI.ObjectModels.SharedModels.MessageResponse"/> </returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.RunModify(System.String,System.String,OpenAI.ObjectModels.RequestModels.RunModifyRequest,System.Threading.CancellationToken)">
            <summary>
                Modifies a run.
            </summary>
            <param name="threadId">The ID of the [thread](/docs/api-reference/threads) that was run.</param>
            <param name="runId">The ID of the run to modify.</param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.CreateThreadAndRun(OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest,System.Threading.CancellationToken)">
            <summary>
                Create a thread and run it in one request.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.CreateThreadAndRunAsStream(OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Create a thread and run it in one request as Stream.
            </summary>
            <returns><see cref="T:OpenAI.ObjectModels.ResponseModels.BaseResponse"/> also returns <see cref="T:OpenAI.ObjectModels.SharedModels.RunResponse"/>,<see cref="T:OpenAI.ObjectModels.ResponseModels.RunStepResponse"/>, <see cref="T:OpenAI.ObjectModels.SharedModels.MessageResponse"/> </returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunService.ListRuns(System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of runs belonging to a thread.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IRunStepService.RunStepsList(System.String,System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of run steps belonging to a run.
            </summary>
            <param name="threadId">The ID of the thread the run and run steps belong to.</param>
            <param name="runId">The ID of the run steps belong to.</param>
            <param name="request">Paging</param>
            <param name="cancellationToken"></param>
            <returns>A list of [run step](/docs/api-reference/runs/step-object) objects.</returns>
        </member>
        <member name="M:OpenAI.Interfaces.IRunStepService.RunStepRetrieve(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a run step.
            </summary>
            <param name="threadId">The ID of the thread to which the run and run step belongs.</param>
            <param name="runId">The ID of the run to which the run step belongs.</param>
            <param name="stepId">The ID of the run step to retrieve.</param>
            <param name="cancellationToken"></param>
            <returns>The [run step](/docs/api-reference/runs/step-object) object matching the specified ID.</returns>
        </member>
        <member name="M:OpenAI.Interfaces.IThreadService.ThreadCreate(OpenAI.ObjectModels.RequestModels.ThreadCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Create a thread.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IThreadService.ThreadRetrieve(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a thread.
            </summary>
            <param name="threadId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IThreadService.ThreadDelete(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a thread.
            </summary>
            <param name="threadId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Interfaces.IThreadService.ModifyThread(System.String,OpenAI.ObjectModels.RequestModels.ModifyThreadRequest,System.Threading.CancellationToken)">
            <summary>
                Modifies a thread.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.ListVectorStoreFiles(System.String,OpenAI.ObjectModels.RequestModels.VectorStoreFileListRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of vector store files.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.CreateVectorStoreFile(System.String,OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileRequest,System.Threading.CancellationToken)">
            <summary>
                Create a vector store file by attaching a [File](/docs/api-reference/files) to a [vector
                store](/docs/api-reference/vector-stores/object).
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.GetVectorStoreFile(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a vector store file.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.DeleteVectorStoreFile(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a vector store file. This will remove the file from the vector store but the file itself will not be
                deleted. To delete the file, use the [delete file](/docs/api-reference/files/delete) endpoint.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.CreateVectorStoreFileBatch(System.String,OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileBatchRequest,System.Threading.CancellationToken)">
            <summary>
                Create a vector store file batch.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.GetVectorStoreFileBatch(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a vector store file batch.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.CancelVectorStoreFileBatch(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as
                possible.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStoreFiles.ListFilesInVectorStoreBatch(System.String,System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of vector store files in a batch.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStores.ListVectorStores(OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of vector stores.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStores.CreateVectorStore(OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest,System.Threading.CancellationToken)">
            <summary>
                Create a vector store.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStores.RetrieveVectorStore(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a vector store.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStores.ModifyVectorStore(System.String,OpenAI.ObjectModels.RequestModels.UpdateVectorStoreRequest,System.Threading.CancellationToken)">
            <summary>
                Modifies a vector store.
            </summary>
        </member>
        <member name="M:OpenAI.Interfaces.IVectorStores.DeleteVectorStore(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a vector store.
            </summary>
        </member>
        <member name="T:OpenAI.Managers.OpenAIService">
            <inheritdoc />
            <summary>
                Beta service for OpenAI.
            </summary>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.AssistantCreate(OpenAI.ObjectModels.RequestModels.AssistantCreateRequest,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.AssistantList(OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.AssistantRetrieve(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.AssistantModify(System.String,OpenAI.ObjectModels.RequestModels.AssistantModifyRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.AssistantDelete(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateTranscription(OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateTranslation(OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.BatchCreate(OpenAI.ObjectModels.RequestModels.BatchCreateRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.BatchRetrieve(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.BatchCancel(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateCompletion(OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateCompletionAsStream(OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateCompletion(OpenAI.ObjectModels.RequestModels.CompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateCompletionAsStream(OpenAI.ObjectModels.RequestModels.CompletionCreateRequest,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ListFile(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.UploadFile(System.String,System.Byte[],System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.DeleteFile(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RetrieveFile(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RetrieveFileContent``1(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateImage(OpenAI.ObjectModels.RequestModels.ImageCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates an image given a prompt.
            </summary>
            <param name="imageCreateModel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateImageEdit(OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates an edited or extended image given an original image and a prompt.
            </summary>
            <param name="imageEditCreateRequest"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateImageVariation(OpenAI.ObjectModels.RequestModels.ImageVariationCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a variation of a given image.
            </summary>
            <param name="imageEditCreateRequest"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateMessage(System.String,OpenAI.ObjectModels.RequestModels.MessageCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Create a message.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ListMessages(System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <summary>
                Returns a list of messages for a given thread.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RetrieveMessage(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ModifyMessage(System.String,System.String,OpenAI.ObjectModels.RequestModels.ModifyMessageRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateModeration(OpenAI.ObjectModels.RequestModels.CreateModerationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunCreate(System.String,OpenAI.ObjectModels.RequestModels.RunCreateRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Create a run.
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="modelId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunCreateAsStream(System.String,OpenAI.ObjectModels.RequestModels.RunCreateRequest,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <param name="threadId"></param>
            <param name="request"></param>
            <param name="modelId"></param>
            <param name="justDataMode"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunModify(System.String,System.String,OpenAI.ObjectModels.RequestModels.RunModifyRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunRetrieve(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a run.
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunCancel(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Cancels a run that is in_progress.
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunSubmitToolOutputs(System.String,System.String,OpenAI.ObjectModels.RequestModels.SubmitToolOutputsToRunRequest,System.Threading.CancellationToken)">
            <summary>
                Submit tool outputs to run
                <para>
                    When a run has the status: "requires_action" and required_action.type is submit_tool_outputs,
                    this endpoint can be used to submit the outputs from the tool calls once they're all completed.
                    All outputs must be submitted in a single request.
                </para>
            </summary>
            <param name="threadId"></param>
            <param name="runId"></param>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateThreadAndRun(OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ListRuns(System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunStepsList(System.String,System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.RunStepRetrieve(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.Dispose">
            <summary>
                Method to dispose the HttpContext if created internally.
            </summary>
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Models">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Completions">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Embeddings">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Files">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.FineTunes">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.FineTuningJob">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Moderation">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Image">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Edit">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.ChatCompletion">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Audio">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Batch">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.Managers.OpenAIService.Beta">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.SetDefaultModelId(System.String)">
            <summary>
                Sets default Model Id
            </summary>
            <param name="modelId"></param>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.GetDefaultModelId">
            <summary>
                Get default Model Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ThreadCreate(OpenAI.ObjectModels.RequestModels.ThreadCreateRequest,System.Threading.CancellationToken)">
            <summary>
                Create a thread.
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ThreadRetrieve(System.String,System.Threading.CancellationToken)">
            <summary>
                Retrieves a thread.
            </summary>
            <param name="threadId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ThreadDelete(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a thread.
            </summary>
            <param name="threadId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ModifyThread(System.String,OpenAI.ObjectModels.RequestModels.ModifyThreadRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ListVectorStores(OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateVectorStore(OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ModifyVectorStore(System.String,OpenAI.ObjectModels.RequestModels.UpdateVectorStoreRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.DeleteVectorStore(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CreateVectorStoreFile(System.String,OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.GetVectorStoreFile(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.DeleteVectorStoreFile(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.GetVectorStoreFileBatch(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.CancelVectorStoreFileBatch(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:OpenAI.Managers.OpenAIService.ListFilesInVectorStoreBatch(System.String,System.String,OpenAI.ObjectModels.RequestModels.PaginationRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4">
            <summary>
                More capable than any GPT-3.5 model, able to do more complex tasks, and optimized for chat. Will be updated with
                our latest model iteration.
                8,192 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_32k">
            <summary>
                Same capabilities as the base gpt-4 mode but with 4x the context length. Will be updated with our latest model
                iteration.
                32,768 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_0314">
            <summary>
                Snapshot of gpt-4 from March 14th 2023. Unlike gpt-4, this model will not receive updates, and will only be
                supported for a three month period ending on June 14th 2023.
                8,192 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_32k_0314">
            <summary>
                Snapshot of gpt-4-32 from March 14th 2023. Unlike gpt-4-32k, this model will not receive updates, and will only be
                supported for a three month period ending on June 14th 2023.
                32,768 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_0613">
            <summary>
                Snapshot of gpt-4 from June 13th 2023 with function calling data. Unlike gpt-4, this model will not receive
                updates,
                and will be deprecated 3 months after a new version is released.
                8,192 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_32k_0613">
            <summary>
                Snapshot of gpt-4-32 from June 13th 2023. Unlike gpt-4-32k, this model will not receive updates,
                and will be deprecated 3 months after a new version is released.
                32,768 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_1106_preview">
            <summary>
                The latest GPT-4 model with improved instruction following, JSON mode, reproducible outputs, parallel function
                calling, and more.
                Returns a maximum of 4,096 output tokens. This preview model is not yet suited for production traffic.
                128,000 tokens	Up to Apr 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_vision_preview">
            <summary>
                Ability to understand images, in addition to all other GPT-4 Turbo capabilties.
                Returns a maximum of 4,096 output tokens. This is a preview model version and not suited yet for production
                traffic.
                128,000 tokens	Up to Apr 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_turbo">
            <summary>
                The latest GPT-4 Turbo model with vision capabilities. Vision requests can now use JSON mode and function calling.
                Currently points to gpt-4-turbo-2024-04-09 as of 04/09/2024.
                128,000 tokens	Up to Dec 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4_turbo_2024_04_09">
            <summary>
                GPT-4 Turbo with Vision model. Vision requests can now use JSON mode and function calling.
                `gpt-4-turbo` currently points to this version.
                128,000 tokens	Up to Dec 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4o">
            <summary>
                Our most advanced, multimodal flagship model that’s cheaper and faster than GPT-4 Turbo.
                Currently points to gpt-4o-2024-05-13.
                128,000 tokens	Up to Oct 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4o_2024_05_13">
            <summary>
                Our most advanced, multimodal flagship model that’s cheaper and faster than GPT-4 Turbo.
                Currently points to gpt-4o-2024-05-13.
                128,000 tokens	Up to Oct 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4o_mini">
            <summary>
                Our affordable and intelligent small model for fast, lightweight tasks.
                GPT-4o mini is cheaper and more capable than GPT-3.5 Turbo.
                Currently points to gpt-4o-mini-2024-07-18.
                128,000 tokens Up to Oct 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_4o_mini_2024_07_18">
            <summary>
                Our affordable and intelligent small model for fast, lightweight tasks.
                GPT-4o mini is cheaper and more capable than GPT-3.5 Turbo.
                Currently points to gpt-4o-mini-2024-07-18.
                128,000 tokens Up to Oct 2023
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.ChatGpt3_5Turbo">
            <summary>
                Most capable GPT-3.5 model and optimized for chat at 1/10th the cost of text-davinci-003. Will be updated with our
                latest model iteration.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo">
            <summary>
                Most capable GPT-3.5 model and optimized for chat at 1/10th the cost of text-davinci-003. Will be updated with our
                latest model iteration.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_16k">
            <summary>
                Same capabilities as the standard gpt-3.5-turbo model but with 4 times the context.
                16,384 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.ChatGpt3_5Turbo0301">
            <summary>
                Snapshot of gpt-3.5-turbo from March 1st 2023. Unlike gpt-3.5-turbo, this model will not receive updates, and will
                only be supported for a three month period ending on June 1st 2023.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_0301">
            <summary>
                Snapshot of gpt-3.5-turbo from March 1st 2023. Unlike gpt-3.5-turbo, this model will not receive updates, and will
                only be supported for a three month period ending on June 1st 2023.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_0613">
            <summary>
                Snapshot of gpt-3.5-turbo from June 13th 2023 with function calling data. Unlike gpt-3.5-turbo,
                this model will not receive updates, and will be deprecated 3 months after a new version is released.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_1106">
            <summary>
                The latest GPT-3.5 Turbo model with improved instruction following, JSON mode, reproducible outputs, parallel
                function calling, and more.
                16,384 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_16k_0613">
            <summary>
                Snapshot of gpt-3.5-turbo from June 13th 2023 with function calling data. Unlike gpt-3.5-turbo,
                this model will not receive updates, and will be deprecated 3 months after a new version is released.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Gpt_3_5_Turbo_Instruct">
            <summary>
                Similar capabilities as text-davinci-003 but compatible with legacy Completions endpoint and not Chat Completions.
                4,096 tokens	Up to Sep 2021
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Dall_e_2">
            <summary>
                The previous DALL·E model released in Nov 2022. The 2nd iteration of DALL·E with more realistic, accurate, and 4x
                greater resolution images than the original model.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Dall_e_3">
            <summary>
                The latest DALL·E model released in Nov 2023.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Tts_1">
            <summary>
                TTS is an AI model that converts text to natural sounding spoken text.
                tts-1 is optimized for real time text to speech use cases.
                Released in Nov 2023.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.Tts_1_hd">
            <summary>
                TTS is an AI model that converts text to natural sounding spoken text.
                tts-1-hd is optimized for quality
                Released in Nov 2023.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.O1_preview">
            <summary>
                Reasoning model designed to solve hard problems across domains.
                Released in Sep 2024.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.Models.O1_mini">
            <summary>
                Faster and cheaper reasoning model particularly good at coding, math, and science.
                Released in Sep 2024.
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.Models.ModelNameBuilder(OpenAI.ObjectModels.Models.BaseModel,System.Nullable{OpenAI.ObjectModels.Models.Subject},System.String)">
            <summary>
                This method does not guarantee returned model exists.
            </summary>
            <param name="subject"></param>
            <param name="version"></param>
            <param name="baseModel"></param>
            <returns></returns>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Name">
            <summary>
                The name of the assistant. The maximum length is 256 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Description">
            <summary>
                The description of the assistant. The maximum length is 512 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Instructions">
            <summary>
                The system instructions that the assistant uses. The maximum length is 256,000 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Tools">
            <summary>
                A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types
                `code_interpreter`, `file_search`, or `function`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.ToolResources">
            <summary>
                A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For
                example, the code_interpreter tool requires a list of file IDs, while the file_search tool requires a list of
                vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.ResponseFormat">
            <summary>
                Specifies the format that the model must output. Compatible with
                <a href="https://platform.openai.com/docs/models/gpt-4o">GPT-4o</a>,
                <a href="https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4">GPT-4 Turbo</a>, and all GPT-3.5 Turbo
                models since gpt-3.5-turbo-1106.
                Setting to <c>{ "type": "json_object" }</c> enables JSON mode, which guarantees the message the model generates is
                valid JSON. <br />
                <b>Important: </b>when using JSON mode, you must also instruct the model to produce JSON yourself via a system or
                user message.Without this, the model may generate an unending stream of whitespace until the generation reaches the
                token limit, resulting in a long-running and seemingly "stuck" request.Also note that the message content may be
                partially cut off if <c>finish_reason= "length"</c>, which indicates the generation exceeded <c>max_tokens</c> or
                the
                conversation exceeded the max context length.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Model">
            <summary>
                ID of the model to use. You can use the
                <a href="https://platform.openai.com/docs/api-reference/models/list">List models</a> API to see all of your
                available models, or see our <a href="https://platform.openai.com/docs/models/overview">Model overview</a> for
                descriptions of them.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantCreateRequest.Temperature">
            <summary>
                What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while
                lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantFileCreateRequest.FileId">
            <summary>
                A File ID (with purpose="assistants") that the assistant should use. Useful for tools like retrieval and
                code_interpreter that can access files.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Name">
            <summary>
                The name of the assistant. The maximum length is 256
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Description">
            <summary>
                The description of the assistant. The maximum length is 512 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Instructions">
            <summary>
                The system instructions that the assistant uses. The maximum length is 32768 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Tools">
            <summary>
                A list of tools enabled on the assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.ToolResources">
            <summary>
                A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For
                example, the code_interpreter tool requires a list of file IDs, while the file_search tool requires a list of
                vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.ResponseFormat">
            <summary>
                Specifies the format that the model must output. Compatible with
                <a href="https://platform.openai.com/docs/models/gpt-4o">GPT-4o</a>,
                <a href="https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4">GPT-4 Turbo</a>, and all GPT-3.5 Turbo
                models since gpt-3.5-turbo-1106.
                Setting to <c>{ "type": "json_object" }</c> enables JSON mode, which guarantees the message the model generates is
                valid JSON. <br />
                <b>Important: </b>when using JSON mode, you must also instruct the model to produce JSON yourself via a system or
                user message.Without this, the model may generate an unending stream of whitespace until the generation reaches the
                token limit, resulting in a long-running and seemingly "stuck" request.Also note that the message content may be
                partially cut off if <c>finish_reason= "length"</c>, which indicates the generation exceeded <c>max_tokens</c> or
                the
                conversation exceeded the max context length.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Model">
            <summary>
                ID of the model to use
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AssistantModifyRequest.Temperature">
            <summary>
                What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while
                lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest.Input">
            <summary>
                The text to generate audio for. The maximum length is 4096 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest.Voice">
            <summary>
                The voice to use when generating the audio. Supported voices are alloy, echo, fable, onyx, nova, and shimmer
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest.ResponseFormat">
            <summary>
                The format to audio in. Supported formats are mp3, opus, aac, and flac
                Defaults to mp3
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest.Speed">
            <summary>
                The speed of the generated audio. Select a value from 0.25 to 4.0.
                Defaults to 1.0
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateSpeechRequest.Model">
            <summary>
                ID of the model to use. One of the available TTS models: tts-1 or tts-1-hd
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.Prompt">
            <summary>
                An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio
                language.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.ResponseFormat">
            <summary>
                The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.Language">
            <summary>
                The language of the input audio. Supplying the input language in
                <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> format will improve accuracy and
                latency.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.TimestampGranularities">
            <summary>
                The timestamp granularities to populate for this transcription. response_format must be set verbose_json to use
                timestamp granularities. Either or both of these options are supported:
                <a cref="P:OpenAI.ObjectModels.StaticValues.AudioStatics.TimestampGranularity.Word">word</a>, or
                <a cref="P:OpenAI.ObjectModels.StaticValues.AudioStatics.TimestampGranularity.Segment">segment</a>. Note: There is no
                additional latency for segment timestamps, but generating word timestamps incurs additional latency.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.File">
            <summary>
                The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.FileStream">
            <summary>
                The stream of the audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.FileName">
            <summary>
                FileName.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.Model">
            <summary>
                ID of the model to use. Only whisper-1 is currently available.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.AudioCreateTranscriptionRequest.Temperature">
            <summary>
                The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower
                values like 0.2 will make it more focused and deterministic. If set to 0, the model will use log probability to
                automatically increase the temperature until certain thresholds are hit.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.BatchCreateRequest.InputFileId">
            <summary>
                The ID of an uploaded file that contains requests for the new batch.
                See [upload file](/docs/api-reference/files/create) for how to upload a file.
                Your input file must be formatted as a JSONL file, and must be uploaded with the purpose `batch`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.BatchCreateRequest.Endpoint">
            <summary>
                The endpoint to be used for all requests in the batch. Currently only `/v1/chat/completions` is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.BatchCreateRequest.CompletionWindow">
            <summary>
                The time frame within which the batch should be processed. Currently only `24h` is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.BatchCreateRequest.Metadata">
            <summary>
                Optional custom metadata for the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Messages">
            <summary>
                The messages to generate chat completions for, in the chat format.
                The main input is the messages parameter. Messages must be an array of message objects, where each object has a
                role (either “system”, “user”, or “assistant”) and content (the content of the message). Conversations can be as
                short as 1 message or fill many pages.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.N">
            <summary>
                How many chat completion choices to generate for each input message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Stream">
            <summary>
                If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events
                as they become available, with the stream terminated by a data: [DONE] message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.StreamOptions">
            <summary>
                Options for streaming response. Only set this when you set <see cref="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Stream" />: <c>true</c>.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Stop">
            <summary>
                Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop
                sequence.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.StopAsList">
            <summary>
                Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop
                sequence.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.MaxTokens">
            <summary>
                The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can
                return will be (4096 - prompt tokens).
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-max_tokens" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.MaxCompletionTokens">
            <summary>
                An upper bound for the number of tokens that can be generated for a completion,
                including visible output tokens and reasoning tokens.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/chat/create#chat-create-max_completion_tokens" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.PresencePenalty">
            <summary>
                Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far,
                increasing the model's likelihood to talk about new topics.
            </summary>
            <seealso href="https://platform.openai.com/docs/api-reference/parameter-details" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.FrequencyPenalty">
            <summary>
                Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so
                far, decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <seealso href="https://platform.openai.com/docs/api-reference/parameter-details" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.LogitBias">
            <summary>
                Modify the likelihood of specified tokens appearing in the completion.
                Accepts a json object that maps tokens(specified by their token ID in the GPT tokenizer) to an associated bias
                value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to
                token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact
                effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values
                like -100 or 100 should result in a ban or exclusive selection of the relevant token.
                As an example, you can pass { "50256": -100}
                to prevent the endoftext token from being generated.
            </summary>
            <seealso href="https://platform.openai.com/tokenizer?view=bpe" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Tools">
            <summary>
                A list of functions the model may generate JSON inputs for.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ToolsCalculated">
            <summary>
                A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list
                of functions the model may generate JSON inputs for.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ToolChoice">
            <summary>
                Controls which (if any) function is called by the model. none means the model will not call a function and instead
                generates a message. auto means the model can pick between generating a message or calling a function. Specifying
                a particular function via {"type: "function", "function": {"name": "my_function"}} forces the model to call that
                function.
                none is the default when no functions are present. auto is the default if functions are present.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ResponseFormat">
            <summary>
                The format that the model must output. Used to enable JSON mode.
                Must be one of "text" or "json_object".<br />
                <see cref="T:OpenAI.ObjectModels.StaticValues.CompletionStatics.ResponseFormat" /><br />
                <example>
                    Sample Usage:<br />
                    new ResponseFormat { Type = StaticValues.CompletionStatics.ResponseFormat.Json }
                </example>
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ChatResponseFormat">
            <summary>
                The format that the model must output. Used to enable JSON mode.
                Must be one of "text" or "json_object".
            </summary>
            <example>
                This example shows how to set the ChatResponseFormat to JSON:
                <code>
                    var chatResponse = new ChatResponse
                    {
                        ChatResponseFormat = ChatResponseFormats.Json
                    };
                </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">
                Thrown when an unsupported <see cref="T:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ResponseFormats" /> value is provided.
            </exception>
            <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
                Thrown when <see cref="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ResponseFormat" /> is already set.
            </exception>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Seed">
            <summary>
                This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that
                repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed,
                and you should refer to the system_fingerprint response parameter to monitor changes in the backend.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.LogProbs">
            <summary>
                Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each
                output token returned in the content of message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.TopLogprobs">
            <summary>
                An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with
                an associated log probability. logprobs must be set to true if this parameter is used.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ParallelToolCalls">
            <summary>
                Whether to enable parallel <a href="https://platform.openai.com/docs/guides/function-calling/parallel-function-calling">function calling</a> during tool use.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Model">
            <summary>
                ID of the model to use. For models supported see <see cref="T:OpenAI.ObjectModels.Models" /> start with <c>Gpt_</c>
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.Temperature">
            <summary>
                What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while
                lower values like 0.2 will make it more focused and deterministic.
                We generally recommend altering this or top_p but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.User">
            <summary>
                A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatCompletionCreateRequest.ServiceTier">
            <summary>
            Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:
            If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.
            If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.
            If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.
            When not set, the default behavior is 'auto'.
            When this parameter is set, the response body will include the service_tier utilized.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.ChatMessage">
            <summary>
                The contents of the message.
                Messages must be an array of message objects, where each object has a role (either “system”, “user”, or
                “assistant”) and content (the content of the message) and an optional name
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.RequestModels.ChatMessage.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{OpenAI.ObjectModels.RequestModels.ToolCall},System.String)">
            <summary>
            </summary>
            <param name="role">The role of the author of this message. One of system, user, or assistant.</param>
            <param name="content">The contents of the message.</param>
            <param name="name">
                The name of the author of this message. May contain a-z, A-Z, 0-9, and underscores, with a maximum
                length of 64 characters.
            </param>
            <param name="toolCallId">The tool function call id generated by the model</param>
            <param name="toolCalls">The tool calls generated by the model.</param>
        </member>
        <member name="M:OpenAI.ObjectModels.RequestModels.ChatMessage.#ctor(System.String,System.Collections.Generic.IList{OpenAI.ObjectModels.RequestModels.MessageContent},System.String,System.Collections.Generic.IList{OpenAI.ObjectModels.RequestModels.ToolCall},System.String)">
            <summary>
            </summary>
            <param name="role">The role of the author of this message. One of system, user, or assistant.</param>
            <param name="contents">The list of the content messages.</param>
            <param name="name">
                The name of the author of this message. May contain a-z, A-Z, 0-9, and underscores, with a maximum
                length of 64 characters.
            </param>
            <param name="toolCallId">The tool function call id generated by the model</param>
            <param name="toolCalls">The tool calls generated by the model.</param>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.Role">
            <summary>
                The role of the author of this message. One of system, user, or assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.ContentCalculated">
            <summary>
                The contents of the message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.Name">
            <summary>
                The name of the author of this message. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64
                characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.ToolCallId">
            <summary>
                Required for tool role messages.
                Tool call that this message is responding to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.FunctionCall">
            <summary>
                Deprecated and replaced by tool_calls. The name and arguments of a function that should be called, as generated by
                the model.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChatMessage.ToolCalls">
            <summary>
                The tool calls generated by the model, such as function calls.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest">
            <summary>
                Create Completion Request Model
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Prompt">
            <summary>
                The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.
                Note that endoftext is the document separator that the model sees during training, so if a prompt is not specified
                the model will generate as if from the beginning of a new document.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-prompt" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.PromptAsList">
            <summary>
                The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.
                Note that endoftext is the document separator that the model sees during training, so if a prompt is not specified
                the model will generate as if from the beginning of a new document.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-prompt" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Suffix">
            <summary>
                The suffix that comes after a completion of inserted text.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.MaxTokens">
            <summary>
                The maximum number of <a href="https://platform.openai.com/tokenizer">tokens</a> to generate in the completion.
                The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context
                length of 2048 tokens (except davinci-codex, which supports 4096).
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-max_tokens" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.N">
            <summary>
                Defaults to 1
                How many completions to generate for each prompt.
                Note: Because this parameter generates many completions, it can quickly consume your token quota.Use carefully and
                ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Stream">
            <summary>
                Whether to stream back partial progress. If set, tokens will be sent as data-only
                <a
                    href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format">
                    server-sent events
                </a>
                as they become available, with the stream terminated by a data: [DONE] message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Echo">
            <summary>
                Echo back the prompt in addition to the completion
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Stop">
            <summary>
                Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop
                sequence.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.StopAsList">
            <summary>
                Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop
                sequence.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.PresencePenalty">
            <summary>
                Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far,
                increasing the model's likelihood to talk about new topics.
            </summary>
            <seealso href="https://platform.openai.com/docs/api-reference/parameter-details" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.FrequencyPenalty">
            <summary>
                Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so
                far, decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <seealso href="https://platform.openai.com/docs/api-reference/parameter-details" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.BestOf">
            <summary>
                Generates best_of completions server-side and returns the "best" (the one with the lowest log probability per
                token). Results cannot be streamed.
                When used with n, best_of controls the number of candidate completions and n specifies how many to return – best_of
                must be greater than n.
                Note: Because this parameter generates many completions, it can quickly consume your token quota.Use carefully and
                ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.LogitBias">
            <summary>
                Modify the likelihood of specified tokens appearing in the completion.
                Accepts a json object that maps tokens(specified by their token ID in the GPT tokenizer) to an associated bias
                value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to
                token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact
                effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values
                like -100 or 100 should result in a ban or exclusive selection of the relevant token.
                As an example, you can pass { "50256": -100}
                to prevent the endoftext token from being generated.
            </summary>
            <seealso href="https://platform.openai.com/tokenizer?view=bpe" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.LogProbs">
            <summary>
                Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. For example, if
                logprobs is 5, the API will return a list of the 5 most likely tokens. The API will always return the logprob of
                the sampled token, so there may be up to logprobs+1 elements in the response.
                The maximum value for logprobs is 5. If you need more than this, please contact support@openai.com and describe
                your use case.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.Temperature">
            <summary>
                What
                <a href="https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277">sampling temperature</a>
                to use. Higher values means the model will take more risks. Try 0.9 for more creative
                applications, and 0 (argmax sampling) for ones with a well-defined answer.
                We generally recommend altering this or top_p but not both.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CompletionCreateRequest.User">
            <summary>
                A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateModerationRequest.InputAsList">
            <summary>
                The input text to classify
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateModerationRequest.Input">
            <summary>
                The input text to classify
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateModerationRequest.Model">
            <summary>
                Two content moderations models are available: text-moderation-stable and text-moderation-latest.
                The default is text-moderation-latest which will be automatically upgraded over time. This ensures you are always
                using our most accurate model. If you use text-moderation-stable, we will provide advanced notice before updating
                the model. Accuracy of text-moderation-stable may be slightly lower than for text-moderation-latest.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Instructions">
            <summary>
                Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Tools">
            <summary>
                Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run
                basis.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.ToolResources">
            <summary>
                A set of resources that are used by the assistant&apos;s tools. The resources are specific to the type of tool. For
                example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of
                vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Temperature">
            <summary>
                What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while
                lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Stream">
            <summary>
                If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run
                enters a terminal state with a `data: [DONE]` message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.MaxPromptTokens">
            <summary>
                The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to
                use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of
                prompt tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.MaxCompletionTokens">
            <summary>
                The maximum number of completion tokens that may be used over the course of the run. The run will make a best
                effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds
                the number of completion tokens specified, the run will end with status `incomplete`. See `incomplete_details` for
                more info.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.TruncationStrategy">
            <summary>
                Controls for how a thread will be truncated prior to the run. Use this to control the intial context window of the
                run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.ToolChoice">
            <summary>
                Controls which (if any) tool is called by the model.
                `none` means the model will not call any tools and instead generates a message.
                `auto` is the default value and means the model can pick between generating a message or calling a tool.
                Specifying a particular tool like `{&quot;type&quot;: &quot;file_search&quot;}` or `{&quot;type&quot;: &quot;
                function&quot;, &quot;function&quot;: {&quot;name&quot;: &quot;my_function&quot;}}` forces the model to call that
                tool.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.ResponseFormat">
            <summary>
                Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo)
                and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.
                Setting to `{ &quot;type&quot;: &quot;json_object&quot; }` enables JSON mode, which guarantees the message the
                model generates is valid JSON.
                **Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or
                user message. Without this, the model may generate an unending stream of whitespace until the generation reaches
                the token limit, resulting in a long-running and seemingly &quot;stuck&quot; request. Also note that the message
                content may be partially cut off if `finish_reason=&quot;length&quot;`, which indicates the generation exceeded
                `max_tokens` or the conversation exceeded the max context length.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.AssistantId">
            <summary>
                The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateThreadAndRunRequest.Model">
            <summary>
                The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it
                will override the model associated with the assistant. If not, the model associated with the assistant will be
                used.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FileSearch.VectorStoreIds">
            <summary>
                The vector store attached to this assistant. There can be a maximum of 1 vector store attached to the assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FileSearch.VectorStores">
            <summary>
                A helper to create a vector store with file_ids and attach it to this assistant. There can be a maximum of 1 vector
                store attached to the assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.VectorStores.FileIds">
            <summary>
                A list of file IDs to add to the vector store. There can be a maximum of 10000 files in a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.VectorStores.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to a vector store. This can be useful for storing additional
                information about the vector store in a structured format. Keys can be a maximum of 64 characters long and values
                can be a maxium of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CodeInterpreter.FileIds">
            <summary>
                A list of file IDs made available to the code_interpreter tool. There can be a maximum of 20 files associated with
                the tool.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolsItem.Type">
            <summary>
                The type of the tool. Currently, only `function` is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.Function.Name">
            <summary>
                The name of the function.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.Function.Arguments">
            <summary>
                The arguments passed to the function.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.Function.Output">
            <summary>
                The output of the function. This will be `null` if the outputs have not been
                [submitted](/docs/api-reference/runs/submitToolOutputs) yet.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileBatchRequest.FileIds">
            <summary>
                A list of [File](/docs/api-reference/files) IDs that the vector store should use. Useful for tools like
                `file_search` that can access files.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileBatchRequest.ChunkingStrategy">
            <summary>
                The chunking strategy used to chunk the file(s). If not set, will use the auto strategy.
                Only applicable if file_ids is non-empty.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreFileRequest.FileId">
            <summary>
                A [File](/docs/api-reference/files) ID that the vector store should use. Useful for tools like `file_search` that
                can access files.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest.FileIds">
            <summary>
                A list of [File](/docs/api-reference/files) IDs that the vector store should use. Useful for tools like
                `file_search` that can access files.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest.Name">
            <summary>
                The name of the vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest.ExpiresAfter">
            <summary>
                The expiration policy for a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.CreateVectorStoreRequest.ChunkingStrategy">
            <summary>
                The chunking strategy used to chunk the file(s). If not set, will use the auto strategy.
                Only applicable if file_ids is non-empty.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChunkingStrategy.Type">
            <summary>
                The type of chunking strategy. Must be either "auto" or "static".
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ChunkingStrategy.StaticParameters">
            <summary>
                The static chunking parameters. Required if type is "static".
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.StaticChunkingParameters.MaxChunkSizeTokens">
            <summary>
                The maximum number of tokens in each chunk. The default value is 800.
                The minimum value is 100 and the maximum value is 4096.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.StaticChunkingParameters.ChunkOverlapTokens">
            <summary>
                The number of tokens that overlap between chunks. The default value is 400.
                Note that the overlap must not exceed half of max_chunk_size_tokens.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.EditCreateRequest">
            <summary>
                Create Edit Request Model
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EditCreateRequest.Input">
            <summary>
                The input text to use as a starting point for the edit.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EditCreateRequest.Instruction">
            <summary>
                The instruction that tells the model how to edit the prompt.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EditCreateRequest.N">
            <summary>
                Defaults to 1
                How many completions to generate for each prompt.
                Note: Because this parameter generates many completions, it can quickly consume your token quota.Use carefully and
                ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EditCreateRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EditCreateRequest.Temperature">
            <summary>
                What
                <a href="https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277">sampling temperature</a>
                to use. Higher values means the model will take more risks. Try 0.9 for more creative
                applications, and 0 (argmax sampling) for ones with a well-defined answer.
                We generally recommend altering this or top_p but not both.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest.InputAsList">
            <summary>
                Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs
                in a single request, pass an array of strings or array of token arrays. Each input must not exceed 2048 tokens in
                length.
                Unless your are embedding code, we suggest replacing newlines (`\n`) in your input with a single space, as we have
                observed inferior results when newlines are present.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/embeddings/create#embeddings/create-input" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest.Input">
            <summary>
                Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs
                in a single request, pass an array of strings or array of token arrays. Each input must not exceed 2048 tokens in
                length.
                Unless your are embedding code, we suggest replacing newlines (`\n`) in your input with a single space, as we have
                observed inferior results when newlines are present.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/embeddings/create#embeddings/create-input" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest.Dimensions">
            <summary>
                The number of dimensions the resulting output embeddings should have. Only supported in text-embedding-3 and later
                models.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/embeddings/create#embeddings-create-dimensions" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest.EncodingFormat">
            <summary>
                The format to return the embeddings in. Can be either float or base64.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.EmbeddingCreateRequest.Model">
            <summary>
                ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your
                available models, or see our [Model overview](/docs/models/overview) for descriptions of them.
            </summary>
            <see href="https://platform.openai.com/docs/api-reference/embeddings/create#embeddings/create-model" />
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.TrainingFile">
            <summary>
                The ID of an uploaded file that contains training data.
                See <a href="https://platform.openai.com/docs/api-reference/files/upload">upload file</a> for how to upload a file.
                Your dataset must be formatted as a JSONL file, where each training example is a JSON object with the keys "prompt"
                and "completion". Additionally, you must upload your file with the purpose fine-tune.
                See the <a href="https://platform.openai.com/docs/guides/fine-tuning/creating-training-data">fine-tuning</a> guide
                for
                more details.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.ValidationFile">
            <summary>
                The ID of an uploaded file that contains validation data.
                If you provide this file, the data is used to generate validation metrics periodically during fine-tuning. These
                metrics can be viewed in the
                <a href="https://platform.openai.com/docs/guides/fine-tuning/analyzing-your-fine-tuned-model">
                    fine-tuning results
                    file
                </a>
                . Your train and validation data should be mutually exclusive.
                Your dataset must be formatted as a JSONL file, where each validation example is a JSON object with the keys
                "prompt" and "completion". Additionally, you must upload your file with the purpose fine-tune.
                See the <a href="https://platform.openai.com/docs/guides/fine-tuning/creating-training-data">fine-tuning guide</a>
                for
                more details.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.NEpochs">
            <summary>
                The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
                Set -1 for "auto value
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.BatchSize">
            <summary>
                The batch size to use for training. The batch size is the number of training examples used to train a single
                forward and backward pass.
                By default, the batch size will be dynamically configured to be ~0.2% of the number of examples in the training
                set, capped at 256 - in general, we've found that larger batch sizes tend to work better for larger datasets.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.LearningRateMultiplier">
            <summary>
                The learning rate multiplier to use for training. The fine-tuning learning rate is the original learning rate used
                for pretraining multiplied by this value.
                By default, the learning rate multiplier is the 0.05, 0.1, or 0.2 depending on final batch_size(larger learning
                rates tend to perform better with larger batch sizes). We recommend experimenting with values in the range 0.02 to
                0.2 to see what produces the best results.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.PromptLossWeight">
            <summary>
                The weight to use for loss on the prompt tokens. This controls how much the model tries to learn to generate the
                prompt (as compared to the completion which always has a weight of 1.0), and can add a stabilizing effect to
                training when completions are short.
                If prompts are extremely long (relative to completions), it may make sense to reduce this weight so as to avoid
                over-prioritizing learning the prompt.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.ComputeClassificationMetrics">
            <summary>
                If set, we calculate classification-specific metrics such as accuracy and F-1 score using the validation set at the
                end of every epoch.These metrics can be viewed in the
                <a href="https://platform.openai.com/docs/guides/fine-tuning/analyzing-your-fine-tuned-model">results file</a>.
                In order to compute classification metrics, you must provide a validation_file.Additionally, you must specify
                classification_n_classes for multiclass classification or classification_positive_class for binary classification.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.ClassificationNClasses">
            <summary>
                The number of classes in a classification task.
                This parameter is required for multiclass classification.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.ClassificationPositiveClass">
            <summary>
                The positive class in binary classification.
                This parameter is needed to generate precision, recall, and F1 metrics when doing binary classification.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.ClassificationBetas">
            <summary>
                If this is provided, we calculate F-beta scores at the specified beta values. The F-beta score is a generalization
                of F-1 score. This is only used for binary classification.
                With a beta of 1 (i.e.the F-1 score), precision and recall are given the same weight.A larger beta score puts more
                weight on recall and less on precision. A smaller beta score puts more weight on precision and less on recall.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.Suffix">
            <summary>
                A string of up to 40 characters that will be added to your fine-tuned model name.
                For example, a suffix of "custom-model-name" would produce a model name like
                ada:ft-your-org:custom-model-name-2022-02-15-04-21-04.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuneCreateRequest.Model">
            <summary>
                The name of the base model to fine-tune. You can select one of "ada", "babbage", or "curie". To learn more about
                these models, see the <a href="https://platform.openai.com/docs/models">Models</a> documentation.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest.TrainingFile">
            <summary>
                The ID of an uploaded file that contains training data.
                See <see href="https://platform.openai.com/docs/api-reference/files/upload">upload file</see> for how to upload a
                file.
                Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose
                <code>fine-tune</code>.
                See the <see href="https://platform.openai.com/docs/guides/fine-tuning">fine-tuning guide</see> for more details.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest.ValidationFile">
            <summary>
                The ID of an uploaded file that contains validation data.
                If you provide this file, the data is used to generate validation metrics periodically during fine-tuning.
                These metrics can be viewed in the fine-tuning results file.
                The same data should not be present in both train and validation files.
                Your dataset must be formatted as a JSONL file. You must upload your file with the purpose <code>fine-tune</code>.
                See the <see href="https://platform.openai.com/docs/guides/fine-tuning">fine-tuning guide</see> for more details.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest.Hyperparameters">
            <summary>
                The hyperparameters used for the fine-tuning job.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest.Suffix">
            <summary>
                A string of up to 18 characters that will be added to your fine-tuned model name.
                For example, a <code>suffix</code> of "custom-model-name" would produce a model name like
                <code>ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel</code>.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobCreateRequest.Model">
            <summary>
                The name of the model to fine-tune. You can select one of the
                <see href="https://platform.openai.com/docs/guides/fine-tuning/what-models-can-be-fine-tuned">supported models</see>
                .
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.HyperparametersRequestModel.NEpochs">
            <summary>
                The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
                "Auto" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we
                support any number between 1 and 50 epochs.
                "Auto" == -1
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobListEventsRequest.FineTuningJobId">
            <summary>
                The ID of the fine-tuning job to get events for.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobListRequest.After">
            <summary>
                Identifier for the last job from the previous pagination request.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FineTuningJobListRequest.Limit">
            <summary>
                Number of fine-tuning jobs to retrieve.
                Defaults to 20.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.FunctionCall">
            <summary>
                Describes a function call returned from GPT.
                A function call contains a function name, and a dictionary
                mapping function argument names to their values.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FunctionCall.Name">
            <summary>
                Function name
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FunctionCall.Arguments">
            <summary>
                Function arguments, returned as a JSON-encoded dictionary mapping
                argument names to argument values.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.FunctionDefinition">
            <summary>
                Definition of a valid function call.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FunctionDefinition.Name">
            <summary>
                The name of the function to be called. Must be a-z, A-Z, 0-9,
                or contain underscores and dashes, with a maximum length of 64.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FunctionDefinition.Description">
            <summary>
                A description of what the function does, used by the model to choose when and how to call the function.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FunctionDefinition.Parameters">
            <summary>
                Optional. The parameters the functions accepts, described as a JSON Schema object.
                See the <a href="https://platform.openai.com/docs/guides/gpt/function-calling">guide</a> for examples,
                and the <a href="https://json-schema.org/understanding-json-schema/">JSON Schema reference</a> for
                documentation about the format.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.ImageCreateRequest">
            <summary>
                Image Create Request Model
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageCreateRequest.Prompt">
            <summary>
                A text description of the desired image(s). The maximum length is 1000 characters for dall-e-2 and 4000 characters
                for dall-e-3
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageCreateRequest.Quality">
            <summary>
                The quality of the image that will be generated. Possible values are 'standard' or 'hd' (default is 'standard').
                Hd creates images with finer details and greater consistency across the image.
                This param is only supported for dall-e-3 model.
                <br /><br />Check <see cref="T:OpenAI.ObjectModels.StaticValues.ImageStatics.Quality" /> for possible values
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageCreateRequest.Style">
            <summary>
                The style of the generated images. Must be one of vivid or natural.
                Vivid causes the model to lean towards generating hyper-real and dramatic images.
                Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for
                dall-e-3.
                <br /><br />Check <see cref="T:OpenAI.ObjectModels.StaticValues.ImageStatics.Style" /> for possible values
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest.Image">
            <summary>
                The image to edit. Must be a valid PNG file, less than 4MB, and square.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest.ImageName">
            <summary>
                Image file name
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest.Mask">
            <summary>
                An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited.
                Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest.MaskName">
            <summary>
                Mask file name
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageEditCreateRequest.Prompt">
            <summary>
                A text description of the desired image(s). The maximum length is 1000 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageVariationCreateRequest.Image">
            <summary>
                The image to edit. Must be a valid PNG file, less than 4MB, and square.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ImageVariationCreateRequest.ImageName">
            <summary>
                Image file name
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.MessageContent">
            <summary>
                The content of a message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageContent.Type">
            <summary>
                The value of Type property must be one of "text", "image_url"
                note: Currently openAI doesn't support images in the first system message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageContent.Text">
            <summary>
                If the value of Type property is "text" then Text property must contain the message content text
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageContent.ImageUrl">
            <summary>
                If the value of Type property is "image_url" then ImageUrl property must contain a valid image url object
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.RequestModels.MessageContent.TextContent(System.String)">
            <summary>
                Static helper method to create MessageContent Text
                <param name="text">The text content</param>
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.RequestModels.MessageContent.ImageUrlContent(System.String,System.String)">
            <summary>
                Static helper method to create MessageContent with Url
                OpenAI currently supports PNG, JPEG, WEBP, and non-animated GIF
                <param name="imageUrl">The url of an image</param>
                <param name="detail">The detail property</param>
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.RequestModels.MessageContent.ImageBinaryContent(System.Byte[],System.String,System.String)">
            <summary>
                Static helper method to create MessageContent from binary image
                OpenAI currently supports PNG, JPEG, WEBP, and non-animated GIF
                <param name="binaryImage">The image binary data as byte array</param>
                <param name="imageType">The type of image</param>
                <param name="detail">The detail property</param>
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageCreateRequest.Role">
            <summary>
                The role of the entity that is creating the message.
                Currently only user is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageCreateRequest.Content">
            <summary>
                The content of the message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageCreateRequest.Attachments">
            <summary>
                A list of files attached to the message, and the tools they should be added to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageCreateRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
                This can be useful for storing additional information about the object in a structured format.
                Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.Attachment.FileId">
            <summary>
                The ID of the file to attach.
                <a href="https://platform.openai.com/docs/assistants/tools/file-search/supported-files">
                    See list of supported file
                    extensions
                </a>
                .
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.Attachment.Tools">
            <summary>
                The tools to add this file to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ModifyMessageRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ModifyThreadRequest.ToolResources">
            <summary>
                A set of resources that are made available to the assistant's tools in this thread. The resources are specific to
                the type of tool. For example, the code_interpreter tool requires a list of file IDs, while the file_search tool
                requires a list of vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ModifyThreadRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.VectorStoreFileListRequest.Filter">
            <summary>
                Filter by file status. One of in_progress, completed, failed, cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.PaginationRequest.Limit">
            <summary>
                A limit on the number of objects to be returned.
                Limit can range between 1 and 100, and the default is 20.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.PaginationRequest.Order">
            <summary>
                Sort order by the created_at timestamp of the objects.
                "asc" for ascending order and "desc" for descending order.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.PaginationRequest.After">
            <summary>
                A cursor for use in pagination. after is an object ID that defines your place in the list.
                For instance, if you make a list request and receive 100 objects, ending with obj_foo,
                your subsequent call can include after=obj_foo in order to fetch the next page of the list.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.PaginationRequest.Before">
            <summary>
                A cursor for use in pagination. before is an object ID that defines your place in the list.
                For instance, if you make a list request and receive 100 objects, ending with obj_foo, your
                subsequent call can include before=obj_foo in order to fetch the previous page of the list.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.ResponseFormat">
            <summary>
                An object specifying the format that the model must output.
                Used to enable JSON mode.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ResponseFormat.Type">
            <summary>
                Setting to json_object enables JSON mode.
                This guarantees that the message the model generates is valid JSON.
                Note that the message content may be partial if finish_reason="length",
                which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Instructions">
            <summary>
                Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.AdditionalInstructions">
            <summary>
                Appends additional instructions at the end of the instructions for the run. This is useful for modifying the
                behavior on a per-run basis without overriding other instructions.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.AdditionalMessages">
            <summary>
                Adds additional messages to the thread before creating the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Tools">
            <summary>
                Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run
                basis.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.TopP">
            <summary>
                An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the
                tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are
                considered.
                We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Stream">
            <summary>
                If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run
                enters a terminal state with a `data: [DONE]` message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.MaxPromptTokens">
            <summary>
                The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to
                use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of
                prompt tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.MaxCompletionTokens">
            <summary>
                The maximum number of completion tokens that may be used over the course of the run. The run will make a best
                effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds
                the number of completion tokens specified, the run will end with status `incomplete`. See `incomplete_details` for
                more info.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.TruncationStrategy">
            <summary>
                Controls how a thread will be truncated prior to the run. Use this to control the initial context window of the
                run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.ToolChoice">
            <summary>
                Controls which (if any) tool is called by the model.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.ResponseFormat">
            <summary>
                Specifies the format that the model must output. Compatible with
                <see href="https://platform.openai.com/docs/models/gpt-4o">GPT-4o</see>,
                <see href="https://platform.openai.com/docs/models/gpt-4-turbo-and-gpt-4">GPT-4 Turbo</see>, and all GPT-3.5 Turbo
                models since `gpt-3.5-turbo-1106`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.AssistantId">
            <summary>
                The ID of the <see href="https://platform.openai.com/docs/api-reference/assistants">assistant</see> to use to
                execute this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Model">
            <summary>
                The ID of the <see href="https://platform.openai.com/docs/api-reference/models">Model</see> to be used to execute
                this run. If a value is provided here, it will override the model associated with the assistant. If not, the model
                associated with the assistant will be used.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunCreateRequest.Temperature">
            <summary>
                What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while
                lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RunModifyRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.StreamOptions">
            <summary>
                Options for streaming response.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.StreamOptions.IncludeUsage">
            <summary>
                If set, an additional chunk will be streamed before the done message.
            </summary>
            <remarks>
                This usage field on this chunk shows the token usage statistics for the entire request, and the choices field will
                always be an empty array.
            </remarks>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.SubmitToolOutputsToRunRequest.ToolOutputs">
            <summary>
                A list of tools for which the outputs are being submitted.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.SubmitToolOutputsToRunRequest.Stream">
            <summary>
                If true, returns a stream of events that happen during the Run as server-sent events, terminating when the Run
                enters a terminal state with a data: [DONE] message.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.ToolOutput">
            <summary>
                A list of tools for which the outputs are being submitted.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolOutput.ToolCallId">
            <summary>
                The ID of the tool call in the required_action object
                within the run object the output is being submitted for.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolOutput.Output">
            <summary>
                The output of the tool call to be submitted to continue the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ThreadCreateRequest.Messages">
            <summary>
                A list of messages to start the thread with.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ThreadCreateRequest.ToolResources">
            <summary>
                A set of resources that are made available to the assistant's tools in this thread. The resources are specific to
                the type of tool. For example, the code_interpreter tool requires a list of file IDs, while the file_search tool
                requires a list of vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ThreadCreateRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
                This can be useful for storing additional information about the object in a structured format.
                Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolCall.Index">
            <summary>
                The Index of the tool call.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolCall.Id">
            <summary>
                The ID of the tool call.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolCall.Type">
            <summary>
                The type of the tool. Currently, only function is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolCall.FunctionCall">
            <summary>
                The function that the model called.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolChoice.Type">
            <summary>
                "none" is the default when no functions are present.  <br />
                "auto" is the default if functions are present.  <br />
                "function" has to be assigned if user Function is not null<br />
                <br />
                Check <see cref="T:OpenAI.ObjectModels.StaticValues.CompletionStatics.ToolChoiceType" /> for possible values.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.ToolDefinition">
            <summary>
                Definition of a valid tool.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolDefinition.Type">
            <summary>
                Required. The type of the tool. Currently, only function is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolDefinition.Strict">
            <summary>
                Structured Outputs for function calling can be enabled with a single parameter, just by supplying strict: true.
                Please note: This field is not mentioned in the API documentation but is referenced in other documents.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolDefinition.FileSearchTool">
            <summary>
                Overrides for the file search tool.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolDefinition.Function">
            <summary>
                A list of functions the model may generate JSON inputs for.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.ToolDefinition.FunctionCalculated">
            <summary>
                Required. The description of what the function does.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FileSearchTool.MaxNumberResults">
            <summary>
                The maximum number of results the file search tool should output. The default is 20 for gpt-4* models and 5 for
                gpt-3.5-turbo. This number should be between 1 and 50 inclusive.
                Note that the file search tool may output fewer than max_num_results results.
                <a href="https://platform.openai.com/docs/assistants/tools/file-search/customizing-file-search-settings">
                    See the
                    file search tool documentation
                </a>
                for more information.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.FileSearchTool.RankingOptions">
            <summary>
                The ranking options for the file search. If not specified, the file search tool will use the auto ranker and a
                score_threshold of 0.
                See the
                <a href="https://platform.openai.com/docs/assistants/tools/file-search/customizing-file-search-settings">
                    file
                    search tool documentation
                </a>
                for more information.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RankingOptions.Ranker">
            <summary>
                The ranker to use for the file search. If not specified will use the auto ranker.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.RankingOptions.ScoreThreshold">
            <summary>
                The score threshold for the file search. All values must be a floating point number between 0 and 1.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.UpdateVectorStoreRequest.Name">
            <summary>
                The name of the vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.UpdateVectorStoreRequest.ExpiresAfter">
            <summary>
                The expiration policy for a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.UpdateVectorStoreRequest.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.RequestModels.MessageImageUrl">
            <summary>
                The image_url object of vision message content
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageImageUrl.Url">
            <summary>
                The Url property
                Images are made available to the model in two main ways: by passing a link to the image or by passing the base64
                encoded image directly in the url property.
                link example: "url" :
                "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"
                base64 encoded image example: "url" : "data:image/jpeg;base64,{base64_image}"
                Limitations:
                OpenAI currently supports PNG (.png), JPEG (.jpeg and .jpg), WEBP (.webp), and non-animated GIF (.gif) image
                formats
                Image upload size is limited to 20MB per image
                Captcha submission is blocked
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageImageUrl.Detail">
            <summary>
                The optional Detail property controls low or high fidelity image understanding
                It has three options, low, high, or auto, you have control over how the model processes the image and generates its
                textual understanding.
                By default, the model will use the auto setting which will look at the image input size and decide if it should use
                the low or high setting.
                low will disable the “high res” model. The model will receive a low-res 512px x 512px version of the image.
                high will enable “high res” mode, which first allows the model to see the low res image and then creates detailed
                crops of input images
                as 512px squares based on the input image size.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageImageFile.FileId">
            <summary>
                The File ID of the image in the message content. Set purpose="vision" when uploading the File if you need to later
                display the file content.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.RequestModels.MessageImageFile.Detail">
            <summary>
                Specifies the detail level of the image if specified by the user. low uses fewer tokens, you can opt in to high
                resolution using high.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.ResponseModels.AudioCreateSpeechResponse`1">
            <summary>
                File content response
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.Id">
            <summary>
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.Endpoint">
            <summary>
                The OpenAI API endpoint used by the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.InputFileId">
            <summary>
                The ID of the input file for the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.CompletionWindow">
            <summary>
                The time frame within which the batch should be processed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.Status">
            <summary>
                The current status of the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.OutputFileId">
            <summary>
                The ID of the file containing the outputs of successfully executed requests.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.ErrorFileId">
            <summary>
                The ID of the file containing the outputs of requests with errors.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.InProgressAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch started processing.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.ExpiresAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch will expire.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.FinalizingAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch started finalizing.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.CompletedAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch was completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.FailedAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch failed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.ExpiredAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch expired.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.CancellingAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch started cancelling.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.CancelledAt">
            <summary>
                The Unix timestamp (in seconds) for when the batch was cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.RequestCounts">
            <summary>
                The request counts for different statuses within the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.BatchResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
                This can be useful for storing additional information about the object in a structured format.
                Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.RequestCountsResponse.Total">
            <summary>
                Total number of requests in the batch.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.RequestCountsResponse.Completed">
            <summary>
                Number of requests that have been completed successfully.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.BatchResponseModel.RequestCountsResponse.Failed">
            <summary>
                Number of requests that have failed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.Model">
            <summary>
                The model used for the chat completion.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.Choices">
            <summary>
                A list of chat completion choices. Can be more than one if n is greater than 1.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.Usage">
            <summary>
                Usage statistics for the completion request.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.SystemFingerPrint">
            <summary>
                This fingerprint represents the backend configuration that the model runs with.
                Can be used in conjunction with the seed request parameter to understand when backend changes have been made that
                might impact determinism.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.ServiceTier">
            <summary>
                The service tier used for processing the request. This field is only included if the service_tier parameter is
                specified in the request.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) of when the chat completion was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.ChatCompletionCreateResponse.Id">
            <summary>
                A unique identifier for the chat completion.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.ResponseModels.FileResponseModels.FileContentResponse`1">
            <summary>
                File content response
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FileResponseModels.FileContentResponse`1.Content">
            <summary>
                Content of your file
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FileResponseModels.FileContentResponse`1.Successful">
            <summary>
                return false if there is an error
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FileResponseModels.FileContentResponse`1.Error">
            <summary>
                Error
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.FinishedAt">
            <summary>
                The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the
                fine-tuning job is still running.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.FineTunedModel">
            <summary>
                The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still
                running.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.OrganizationId">
            <summary>
                The organization that owns the fine-tuning job.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.Status">
            <summary>
                The current status of the fine-tuning job, which can be either created, pending, running, succeeded, failed, or
                cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.HyperparametersData">
            <summary>
                The hyperparameters used for the fine-tuning job. See the fine-tuning guide for more details.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.TrainingFile">
            <summary>
                The file ID used for training. You can retrieve the training data with the Files API.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.ValidationFile">
            <summary>
                The file ID used for validation. You can retrieve the validation results with the Files API.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.ResultFiles">
            <summary>
                The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the Files API.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.TrainedTokens">
            <summary>
                The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning
                job is still running.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the fine-tuning job was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.Id">
            <summary>
                The object identifier, which can be referenced in the API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.Model">
            <summary>
                The base model that is being fine-tuned.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.FineTuningJobResponseModels.FineTuningJobResponse.Hyperparameters.NEpochs">
            <summary>
                The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
                "Auto" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we
                support any number between 1 and 50 epochs.
                "Auto" == -1
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.AssistantId">
            <summary>
                The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.ThreadId">
            <summary>
                The ID of the [thread](/docs/api-reference/threads) that was run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.RunId">
            <summary>
                The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.Type">
            <summary>
                The type of run step, which can be either `message_creation` or `tool_calls`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.Status">
            <summary>
                The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, `expired`, or
                'incomplete'.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.LastError">
            <summary>
                The last error associated with this run step. Will be `null` if there are no errors.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.ExpiredAt">
            <summary>
                The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is
                expired.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.CancelledAt">
            <summary>
                The Unix timestamp (in seconds) for when the run step was cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.FailedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run step failed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.CompletedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run step completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.Usage">
            <summary>
                Usage statistics related to the run step. This value will be `null` while the run step&apos;s status is
                `in_progress`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run step was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepResponse.Id">
            <summary>
                The identifier of the run step, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.RunStepDetails.Type">
            <summary>
                Always message_creation.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.ExpiresAfter.Anchor">
            <summary>
                Anchor timestamp after which the expiration policy applies. Supported anchors: `last_active_at`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.ExpiresAfter.Days">
            <summary>
                The number of days after the anchor time that the vector store will expire.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.FileCounts.InProgress">
            <summary>
                The number of files that are currently being processed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.FileCounts.Completed">
            <summary>
                The number of files that have been processed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.FileCounts.Failed">
            <summary>
                The number of files that have failed to process.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.FileCounts.Cancelled">
            <summary>
                The number of files that where cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.FileCounts.Total">
            <summary>
                The total number of files.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileBatchObject.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileBatchObject.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the vector store files batch was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileBatchObject.VectorStoreId">
            <summary>
                The ID of the [vector store](/docs/api-reference/vector-stores/object) that the [File](/docs/api-reference/files)
                is attached to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileBatchObject.Status">
            <summary>
                The status of the vector store files batch, which can be either `in_progress`, `completed`, `cancelled` or
                `failed`.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.UsageBytes">
            <summary>
                The total vector store usage in bytes. Note that this may be different from the original file size.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the vector store file was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.VectorStoreId">
            <summary>
                The ID of the [vector store](/docs/api-reference/vector-stores/object) that the [File](/docs/api-reference/files)
                is attached to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.Status">
            <summary>
                The status of the vector store file, which can be either `in_progress`, `completed`, `cancelled`, or `failed`. The
                status `completed` indicates that the vector store file is ready for use.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.LastError">
            <summary>
                The last error associated with this vector store file. Will be `null` if there are no errors.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreFileObject.ChunkingStrategy">
            <summary>
                The strategy used to chunk the file.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the vector store was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.Name">
            <summary>
                The name of the vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.UsageBytes">
            <summary>
                The total number of bytes used by the files in the vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.Status">
            <summary>
                The status of the vector store, which can be either `expired`, `in_progress`, or `completed`. A status of
                `completed` indicates that the vector store is ready for use.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.ExpiresAfter">
            <summary>
                The expiration policy for a vector store.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.ExpiresAt">
            <summary>
                The Unix timestamp (in seconds) for when the vector store will expire.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.LastActiveAt">
            <summary>
                The Unix timestamp (in seconds) for when the vector store was last active.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information
                about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of
                512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.ResponseModels.VectorStoreResponseModels.VectorStoreObjectResponse.ChunkingStrategy">
            <summary>
                The chunking strategy used to chunk the file(s). If not set, will use the auto strategy.
                Only applicable if file_ids is non-empty.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantFileResponse.AssistantId">
            <summary>
                The Unix timestamp (in seconds) for when the assistant file was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantFileResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the assistant file was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantFileResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Name">
            <summary>
                The name of the assistant. The maximum length is 256 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Description">
            <summary>
                The description of the assistant. The maximum length is 512 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Instructions">
            <summary>
                The system instructions that the assistant uses.
                The maximum length is 32768 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.FileIds">
            <summary>
                A list of file IDs attached to this assistant.
                There can be a maximum of 20 files attached to the assistant.
                Files are ordered by their creation date in ascending order.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.ToolResources">
            <summary>
                A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For
                example, the code_interpreter tool requires a list of file IDs, while the file_search tool requires a list of
                vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.ResponseFormatOneOfType">
            <summary>
                Specifies the format that the model must output. Compatible with GPT-4o, GPT-4 Turbo, and all GPT-3.5 Turbo models
                since gpt-3.5-turbo-1106.
                Setting to { "type": "json_schema", "json_schema": { ...} }
                enables Structured Outputs which ensures the model will match your supplied JSON schema.Learn more in the
                Structured Outputs guide.
                Setting to { "type": "json_object" }
                enables JSON mode, which ensures the message the model generates is valid JSON.
                Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user
                message.Without this, the model may generate an unending stream of whitespace until the generation reaches the
                token limit, resulting in a long-running and seemingly "stuck" request.Also note that the message content may be
                partially cut off if finish_reason= "length", which indicates the generation exceeded max_tokens or the
                conversation exceeded the max context length.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the assistant was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Model">
            <summary>
                ID of the model to use
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.AssistantResponse.Tools">
            <summary>
                A list of tools enabled on the assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.DeletionStatusResponse.IsDeleted">
            <summary>
                Deletion state
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.DeletionStatusResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.PropertyDefinition">
            <summary>
                Function parameter is a JSON Schema object.
                https://json-schema.org/understanding-json-schema/reference/object.html
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Type">
            <summary>
                Required. Function parameter object type. Default value is "object".
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Properties">
            <summary>
                Optional. List of "function arguments", as a dictionary that maps from argument name
                to an object that describes the type, maybe possible enum values, and so on.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Required">
            <summary>
                Optional. List of "function arguments" which are required.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.AdditionalProperties">
            <summary>
                Optional. Whether additional properties are allowed. Default value is true.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Description">
            <summary>
                Optional. Argument description.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Enum">
            <summary>
                Optional. List of allowed values for this argument.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.MinProperties">
            <summary>
                The number of properties on an object can be restricted using the minProperties and maxProperties keywords. Each of
                these must be a non-negative integer.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.MaxProperties">
            <summary>
                The number of properties on an object can be restricted using the minProperties and maxProperties keywords. Each of
                these must be a non-negative integer.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.PropertyDefinition.Items">
            <summary>
                If type is "array", this specifies the element type for all items in the array.
                If type is not "array", this should be null.
                For more details, see https://json-schema.org/understanding-json-schema/reference/array.html
            </summary>
        </member>
        <member name="M:OpenAI.ObjectModels.SharedModels.PropertyDefinition.ConvertTypeToString(OpenAI.ObjectModels.SharedModels.PropertyDefinition.FunctionObjectTypes)">
            <summary>
                Converts a FunctionObjectTypes enumeration value to its corresponding string representation.
            </summary>
            <param name="type">The type to convert</param>
            <returns>The string representation of the given type</returns>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.MessageAnnotation">
            <summary>
                File citation |File path
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageAnnotation.Type">
            <summary>
                type can be：file_citation、file_path
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageAnnotation.Text">
            <summary>
                The text in the message content that needs to be replaced.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.FileCitation.FileId">
            <summary>
                The ID of the specific File the citation/content  is from.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.FileCitation.Quote">
            <summary>
                The specific quote in the file.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.MessageResponse">
            <summary>
                Represents a message within a thread.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.ThreadId">
            <summary>
                The thread ID that this message belongs to.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Role">
            <summary>
                The entity that produced the message. One of user or assistant.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Content">
            <summary>
                The content of the message in array of text and/or images.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Status">
            <summary>
                The status of the message, which can be either in_progress, incomplete, or completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.IncompleteDetails">
            <summary>
                On an incomplete message, details about why the message is incomplete.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.CompletedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.IncompleteAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.RunId">
            <summary>
                The ID of the run associated with the creation of this message. Value is null when messages are created manually
                using the create message or create thread endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Attachments">
            <summary>
                A list of file IDs that the assistant should use.
                Useful for tools like retrieval and code_interpreter that can access files.
                A maximum of 10 files can be attached to a message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.AssistantId">
            <summary>
                If applicable, the ID of the assistant that authored this message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the message was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.MessageResponse.MessageContentResponse">
            <summary>
                The content of the message:  text and/or images.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.MessageContentResponse.Type">
            <summary>
                text and/or images. image_file text
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.MessageContentResponse.ImageFile">
            <summary>
                References an image File in the content of a message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.MessageContentResponse.Text">
            <summary>
                The text content that is part of a message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageResponse.MessageContentResponse.ImageUrl">
            <summary>
                References an image URL in the content of a message.
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.MessageText">
            <summary>
                The text content that is part of a message.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageText.Value">
            <summary>
                The data that makes up the text.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.MessageText.Annotations">
            <summary>
                annotations
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.SharedModels.RequiredAction">
            <summary>
                Details on the action required to continue the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RequiredAction.Type">
            <summary>
                For now, this is always submit_tool_outputs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RequiredAction.SubmitToolOutputs">
            <summary>
                Details on the tool outputs needed for this run to continue.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SubmitToolOutputs.ToolCalls">
            <summary>
                A list of the relevant tool calls.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.ThreadId">
            <summary>
                The ID of the thread that was executed on as a part of this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.AssistantId">
            <summary>
                The ID of the assistant used for execution of this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Status">
            <summary>
                The status of the run, which can be either queued, in_progress, requires_action, cancelling, cancelled, failed,
                completed, or expired.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.RequiredAction">
            <summary>
                Details on the action required to continue the run.
                Will be null if no action is required.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.LastError">
            <summary>
                The last error associated with this run. Will be null if there are no errors.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.IncompleteDetails">
            <summary>
                Details on why the run is incomplete. Will be null if the run is not incomplete.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.ExpiresAt">
            <summary>
                The Unix timestamp (in seconds) for when the run will expire.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.StartedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was started.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.CancelledAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was cancelled.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.FailedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run failed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.CompletedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was completed.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Instructions">
            <summary>
                The instructions that the assistant used for this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Tools">
            <summary>
                The list of tools that the assistant used for this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Usage">
            <summary>
                Usage statistics related to the run. This value will be null if the run is not in a terminal state (i.e.
                in_progress, queued, etc.).
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Temperature">
            <summary>
                The sampling temperature used for this run. If not set, defaults to 1.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.MaxPromptTokens">
            <summary>
                The maximum number of prompt tokens specified to have been used over the course of the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.MaxCompletionTokens">
            <summary>
                The maximum number of completion tokens specified to have been used over the course of the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.TruncationStrategy">
            <summary>
                The truncation strategy to use for the thread. The default is auto.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.ToolChoice">
            <summary>
                Controls which (if any) tool is called by the model. none means the model will not call any tools and instead
                generates a message.
                auto is the default value and means the model can pick between generating a message or calling a tool.
                Specifying a particular tool like {"type": "TOOL_TYPE"} or {"type": "function", "function": {"name":
                "my_function"}} forces the model to call that tool.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.ResponseFormat">
            <summary>
                Specifies the format that the model must output. Compatible with GPT-4 Turbo and all GPT-3.5 Turbo models newer
                than gpt-3.5-turbo-1106.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the run was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.FileIds">
            <summary>
                The list of File IDs the assistant used for this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
                This can be useful for storing additional information about the object in a structured format.
                Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.RunResponse.Model">
            <summary>
                The model that the assistant used for this run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.IncompleteDetails.Reason">
            <summary>
                The reason why the run is incomplete.
                This will point to which specific token limit was reached over the course of the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SharedImageRequestBaseModel.N">
            <summary>
                The number of images to generate. Must be between 1 and 10.
                For dall-e-3 model, only n=1 is supported.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SharedImageRequestBaseModel.Size">
            <summary>
                The size of the generated images.
                Must be one of 256x256, 512x512, or 1024x1024 for dall-e-2.
                Must be one of 1024x1024, 1792x1024, or 1024x1792 for dall-e-3 models.
                <br /><br />Check <see cref="T:OpenAI.ObjectModels.StaticValues.ImageStatics.Size" /> for possible values
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SharedImageRequestBaseModel.ResponseFormat">
            <summary>
                The format in which the generated images are returned. Must be one of url or b64_json
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SharedImageRequestBaseModel.User">
            <summary>
                A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.
                <a href="https://platform.openai.com/docs/usage-policies/end-user-ids">Learn more</a>.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.SharedImageRequestBaseModel.Model">
            <summary>
                The model to use for image generation. Must be one of dall-e-2 or dall-e-3
                For ImageEditCreateRequest and for ImageVariationCreateRequest only dall-e-2 modell is supported at this time.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.ThreadResponse.ToolResources">
            <summary>
                A set of resources that are made available to the assistant's tools in this thread. The resources are specific to
                the type of tool. For example, the code_interpreter tool requires a list of file IDs, while the file_search tool
                requires a list of vector store IDs.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.ThreadResponse.CreatedAt">
            <summary>
                The Unix timestamp (in seconds) for when the assistant was created.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.ThreadResponse.Id">
            <summary>
                The identifier, which can be referenced in API endpoints.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.ThreadResponse.Metadata">
            <summary>
                Set of 16 key-value pairs that can be attached to an object.
                This can be useful for storing additional information about the object in a structured format.
                Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.TruncationStrategy.Type">
            <summary>
                The truncation strategy to use for the thread.
                The default is "auto". If set to "last_messages", the thread will be truncated to the n most recent messages in the
                thread.
                When set to "auto", messages in the middle of the thread will be dropped to fit the context length of the model,
                max_prompt_tokens.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.SharedModels.TruncationStrategy.LastMessages">
            <summary>
                The number of most recent messages from the thread when constructing the context for the run.
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.StaticValues.ImageStatics.Size.Size1792x1024">
            <summary>
                Only dall-e-3 model
            </summary>
        </member>
        <member name="P:OpenAI.ObjectModels.StaticValues.ImageStatics.Size.Size1024x1792">
            <summary>
                Only dall-e-3 model
            </summary>
        </member>
        <member name="T:OpenAI.ObjectModels.UploadFilePurposes">
            <summary>
                The intended purpose of the uploaded file.
                Use "assistants" for Assistants and Message files, "vision" for Assistants image file inputs, "batch" for Batch
                API, and "fine-tune" for Fine-tuning.
                <a href="https://platform.openai.com/docs/api-reference/files/create#files-create-purpose">Upload File Purposes</a>
                <a href="https://platform.openai.com/docs/api-reference/files/object#files/object-purpose">
                    Upload File Purpose
                    Responses
                </a>
            </summary>
        </member>
        <member name="T:OpenAI.ProviderType">
            <summary>
                Provider Type
            </summary>
        </member>
        <member name="F:OpenAI.ProviderType.OpenAi">
            <summary>
                OpenAi Provider
            </summary>
        </member>
        <member name="F:OpenAI.ProviderType.Azure">
            <summary>
                Azure Provider
            </summary>
        </member>
        <member name="F:OpenAI.OpenAiOptions.SettingKey">
            <summary>
                Setting key for Json Setting Bindings
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.ProviderType">
            <summary>
                Get Provider Type
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.Assistants">
            <summary>
                Calls to the Assistants API require that you pass a beta HTTP header.
                This is handled automatically if you’re using OpenAI’s official Python or Node.js SDKs.
                <a href="https://platform.openai.com/docs/assistants/overview">assistants overview</a> page.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.Organization">
            <summary>
                For users who belong to multiple organizations, you can pass a header to specify which organization is used for an
                API request. Usage from these API requests will count against the specified organization's subscription quota.
                Organization IDs can be found on your
                <a href="https://platform.openai.com/account/org-settings">Organization settings</a> page.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.ApiKey">
            <summary>
                The OpenAI API uses API keys for authentication. Visit your
                <a href="https://platform.openai.com/account/api-keys">API Keys page</a> to retrieve the API key you'll use in
                your requests.
                Remember that your API key is a secret! Do not share it with others or expose it in any client-side code(browsers,
                apps). Production requests must be routed through your own backend server where your API key can be securely loaded
                from an environment variable or key management service.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.ApiVersion">
            <summary>
                Default Api Version
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.BaseDomain">
            <summary>
                Base Domain
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:OpenAI.OpenAiOptions.DeploymentId">
            <summary>
                Azure Deployment Id
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.ResourceName">
            <summary>
                Azure Resource Name
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.DefaultEngineId">
            <summary>
                Default model id. If you are working with only one model, this will save you from few line extra code.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAiOptions.DefaultModelId">
            <summary>
                Default model id. If you are working with only one model, this will save you from few line extra code.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAiOptions.CreateAzureSettings(System.String,System.String,System.String,System.String)">
            <summary>
                Create an instance of this class with the necessary information to connect to the azure open ai api
            </summary>
            <param name="resourceName">Resource Name of your Azure OpenAI resource</param>
            <param name="deploymentId">The id of your deployment of OpenAI</param>
            <param name="apiVersion">The azure open ai api version</param>
            <param name="apiKey">Token used for authentication</param>
            <returns>A valid OpenAiSettings instance configured with the method inputs</returns>
        </member>
        <member name="M:OpenAI.OpenAiOptions.CreateAzureSettingsWithBaseDomain(System.String,System.String,System.String,System.String)">
            <summary>
                Create an instance of this class with the necessary information to connect to the azure open ai api
            </summary>
            <param name="deploymentId">The id of your deployment of OpenAI</param>
            <param name="baseDomain">Base Domain of your Azure OpenAI service</param>
            <param name="apiVersion">The azure open ai api version</param>
            <param name="apiKey">Token used for authentication</param>
            <returns>A valid OpenAiSettings instance configured with the method inputs</returns>
        </member>
        <member name="M:OpenAI.OpenAiOptions.Validate">
            <summary>
                Validate Settings
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:OpenAI.Tokenizer.GPT3.TokenizerGpt3Settings">
            <summary>
                GPT3 Settings.
            </summary>
        </member>
        <member name="T:OpenAI.Tokenizer.GPT3.TokenizerGpt3">
            <summary>
                GPT3 Tokenizer.
            </summary>
        </member>
        <member name="M:OpenAI.Tokenizer.GPT3.TokenizerGpt3.Encode(System.String,System.Boolean)">
            <summary>
                Encode This method use LF style EOL, if you use CR LF style EOL you need to set cleanUpWindowsEOL to true
            </summary>
            <param name="text"></param>
            <param name="cleanUpCREOL">set it true to get rid of CR</param>
            <returns></returns>
        </member>
        <member name="M:OpenAI.Tokenizer.GPT3.TokenizerGpt3.TokenCount(System.String,System.Boolean)">
            <summary>
                Get token count. This method use LF style EOL, if you use CR LF style EOL you need to set cleanUpWindowsEOL to true
            </summary>
            <param name="text"></param>
            <param name="cleanUpCREOL">set it true to get rid of CR</param>
            <returns></returns>
        </member>
    </members>
</doc>
